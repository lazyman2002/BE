syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package proto;

enum Gender {
  MALE = 0;
  FEMALE = 1;
}

enum JobLevel {
  ENTRY_LEVEL = 0;
  MID_LEVEL = 1;
  SENIOR_LEVEL = 2;
  MANAGER = 3;
  DIRECTOR = 4;
  EXECUTIVE = 5;
}

enum JobType {
  FULLTIME = 0;
  HALFTIME = 1;
}

enum Status {
  APPLICATION_REVIEW = 0;
  INTERVIEW = 1;
  SUCCESS = 2;
  FAILURE = 3;
}

enum Proficiency {
  BEGINNER = 0;
  INTERMEDIATE = 1;
  EXPERT = 2;
}

message UserFullInfo{
  int32 userID = 1;
  string username = 2;
  string password = 3;
  string firstname = 4;
  string lastname = 5;
  string email = 6;
  string GoogleToken = 7;
  google.protobuf.Timestamp GoogleTokenExpiration = 8;
//  ngoài CSDL
  bool isCandidate = 9;
}

message CandidateFullInfo{
  UserFullInfo user = 1;
  google.protobuf.Timestamp birthDate = 2;
  Gender gender = 3;
  map<int32, bool>  currentCVs = 4;
}

message UserMetaInfo{
  int32 userID = 1;
  string username = 2;
  string password = 3;
//  ngoài CSDL
  bool isCandidate = 4;
}

message RecruiterFullInfo{
  UserFullInfo user = 1;
  int32 companyID = 2;
  int32 roleID = 3;
  string departmentName = 4;
}

message Answer{
  int32 ansInt = 1;
  int64 ansLong = 2;
  string ansString = 3;
  bool ansBool = 4;
  bytes ansBytes= 5;
}

message JobRequestFullInfo {
  int32 jobID = 1;
  int32 locationID = 2;
  JobType jobType = 3;
  int32 salaryLeast = 4;
  int32 salaryGreatest = 5;
  string currency = 6;
  string jobTitle = 7;
  JobLevel jobLevel = 8;
  string jobDescription = 9;
  google.protobuf.Timestamp deadlineDate = 10;
  map<int32, bool> currentCVs = 11;
}

message JobRequestMetaInfo {
  int32 jobID = 1;
  int32 locationID = 2;
}

message RoleFullInfo{
  int32 roleID = 1;
  int32 roleName = 2;
  int32 roleLevel = 3;
}

message LocationFullInfo {
  CompanyMetaInfo companyMetaInfo = 1;
  string country = 2;
  string state = 3;
  string address = 4;
  string contactNumber = 5;
  JobRequestFullInfo currentJobRequest = 6;
}

message LocationMetaInfo {
  int32 locationID = 1;
  string contactNumber = 2;
  int32 companyID = 3;
}

message CompanyFullInfo{
  int32 companiesID = 1;
  string companyName = 2;
  string companyAvatarURL = 3;
  string website = 4;
  string email = 5;
  map<int32, bool> activeRecruiters = 6;
  map<int32, bool> activeLocations = 7;
}

message CompanyMetaInfo{
  int32 companyID = 1;
  string companyName = 2;
}

message WorkExperienceFullInfo{
  int32 workExperienceID = 1;
  int32 CVID = 2;
  string jobTitle = 3;
  google.protobuf.Timestamp startDate = 4;
  google.protobuf.Timestamp endDate = 5;
  string jobDescription = 6;
}

message SkillFullInfo{
  int32 skillID = 1;
  int32 CVID = 2;
  string skillName = 3;
  Proficiency proficiency = 4;
}

message PersonalityFullInfo{
  int32 personalityID = 1;
  int32 CVID = 2;
  string personalityTitle = 3;
  string description = 4;
}

message EducationFullInfo{
  int32 EducationID = 1;
  int32 CVID = 2;
  string degree = 3;
  string field = 4;
  string institution = 5;
  google.protobuf.Timestamp startDate = 6;
  google.protobuf.Timestamp endDate = 7;
}

message CertificationFullInfo{
  int32 CertificationID = 1;
  int32 CVID = 2;
  string certificationName = 3;
  string provider = 4;
  google.protobuf.Timestamp providedDate = 5;
}

message CVFullInfo{
  int32 CVID = 1;
  int32 candidateID = 2;
  string email = 3;
  string phoneNumber = 4;
  string jobTitle = 5;
  map<int32, bool> currentSkills = 6;
  map<int32, bool> currentPersonalities = 7;
  map<int32, bool> currentWorkExperiences = 8;
  map<int32, bool> currentEducations = 9;
  map<int32, bool> currentCertifications = 10;
}

message CVMetaInfo{
  int32 CVID = 1;
  int32 candidateID = 2;
}

service UserService{
  rpc CandidateCreate (CandidateFullInfo) returns (CandidateFullInfo);
  rpc RecruiterCreate (RecruiterFullInfo) returns (RecruiterFullInfo);

  rpc UserRead (UserMetaInfo) returns (UserFullInfo);
  rpc UserListRead (google.protobuf.Empty) returns (stream UserMetaInfo);
  rpc CandidateRead (UserMetaInfo) returns (CandidateFullInfo);
  rpc CandidateListRead (google.protobuf.Empty) returns (stream CandidateFullInfo);
  rpc RecruiterRead (UserMetaInfo) returns (RecruiterFullInfo);
  rpc RecruiterListRead (google.protobuf.Empty) returns (stream RecruiterFullInfo);

  rpc UserUpdate (UserFullInfo) returns (UserFullInfo);
  rpc CandidateUpdate (CandidateFullInfo) returns (CandidateFullInfo);
  rpc RecruiterUpdate (RecruiterFullInfo) returns (RecruiterFullInfo);

  rpc UserDelete (UserMetaInfo) returns (Answer);
}

service JobRequestService {
  rpc JobRequestRegister (JobRequestFullInfo) returns (JobRequestFullInfo);
  rpc JobRequestRead (JobRequestMetaInfo) returns (JobRequestFullInfo);
  rpc JobRequestUpdateInfo (JobRequestFullInfo) returns (JobRequestFullInfo);
  rpc JobRequestDelete (JobRequestMetaInfo) returns (JobRequestFullInfo);
  //  rpc JobRequestAppendCVs ()
}

service RoleService {
  rpc RoleRegister (RoleFullInfo) returns (RoleFullInfo);
  rpc RoleReadInfo (RoleFullInfo) returns (RoleFullInfo);
  rpc RoleUpdateInfo (RoleFullInfo) returns (RoleFullInfo);
  rpc RoleDeleteInfo (RoleFullInfo) returns (RoleFullInfo);
}

service CompanyService {
  rpc CompanyRegister (CompanyFullInfo) returns (CompanyFullInfo);
  rpc CompanyReadInfo (CompanyMetaInfo) returns (CompanyFullInfo);
  rpc CompanyListRead (google.protobuf.Empty) returns (stream CompanyFullInfo);
  rpc CompanyUpdateInfo (CompanyFullInfo) returns (CompanyFullInfo);
  rpc CompanyDelete (CompanyMetaInfo) returns (CompanyFullInfo);

  //  rpc CompanyAppendRecruiter (RecruiterFullInfo) returns (CompanyFullInfo);
  //  rpc CompanyDeleteRecruiter (RecruiterFullInfo) returns (CompanyFullInfo);

  //  rpc CompanyAppendLocation (LocationMetaInfo) returns (CompanyFullInfo);
  //  rpc CompanyDeleteLocation (LocationMetaInfo) returns (CompanyFullInfo);
}

service LocationService {
  rpc LocationRegister (LocationFullInfo) returns (LocationFullInfo);
  rpc LocationReadInfo (LocationMetaInfo) returns (LocationFullInfo);
  rpc LocationUpdateInfo (LocationFullInfo) returns (LocationFullInfo);
  rpc LocationDelete  (LocationMetaInfo)  returns (LocationFullInfo);

  //  rpc LocationAppendJobReq (JobRequestMetaInfo) returns (LocationFullInfo);
  //  rpc LocationDeleteJobReq (JobRequestMetaInfo) returns (LocationFullInfo);
}

service WorkExperienceService {
  rpc WorkExperienceCreate (WorkExperienceFullInfo) returns (WorkExperienceFullInfo);
  rpc WorkExperienceRead (WorkExperienceFullInfo) returns (WorkExperienceFullInfo);
  rpc WorkExperienceUpdateInfo (WorkExperienceFullInfo) returns (WorkExperienceFullInfo);
  rpc WorkExperienceDelete (WorkExperienceFullInfo) returns (WorkExperienceFullInfo);
}

service SkillService {
  rpc SkillCreate (SkillFullInfo) returns (SkillFullInfo);
  rpc SkillRead (SkillFullInfo) returns (SkillFullInfo);
  rpc SkillUpdateInfo (SkillFullInfo) returns (SkillFullInfo);
  rpc SkillDelete (SkillFullInfo) returns (SkillFullInfo);
}

service PersonalityService {
  rpc PersonalityCreate (PersonalityFullInfo) returns (PersonalityFullInfo);
  rpc PersonalityRead (PersonalityFullInfo) returns (PersonalityFullInfo);
  rpc PersonalityUpdateInfo (PersonalityFullInfo) returns (PersonalityFullInfo);
  rpc PersonalityDelete (PersonalityFullInfo) returns (PersonalityFullInfo);
}

service EducationService {
  rpc EducationCreate (EducationFullInfo) returns (EducationFullInfo);
  rpc EducationRead (EducationFullInfo) returns (EducationFullInfo);
  rpc EducationUpdateInfo (EducationFullInfo) returns (EducationFullInfo);
  rpc EducationDelete (EducationFullInfo) returns (EducationFullInfo);
}

service CertificationService {
  rpc CertificationCreate (CertificationFullInfo) returns (CertificationFullInfo);
  rpc CertificationRead (CertificationFullInfo) returns (CertificationFullInfo);
  rpc CertificationUpdateInfo (CertificationFullInfo) returns (CertificationFullInfo);
  rpc CertificationDelete (CertificationFullInfo) returns (CertificationFullInfo);
}

service CVService{
  rpc CVCreate (CVFullInfo) returns (CVFullInfo);
  rpc CVRead (CVMetaInfo) returns (CVFullInfo);
  rpc CVUpdateInfo (CVFullInfo) returns (CVFullInfo);
  rpc CVDelete (CVMetaInfo) returns (CVFullInfo);

  //  rpc CVAppendWorkExperience (WorkExperienceFullInfo) returns (WorkExperienceFullInfo);
  //  rpc CVDeleteWorkExperience (WorkExperienceFullInfo) returns (WorkExperienceFullInfo);

  //  rpc CVAppendSkill (SkillFullInfo) returns (SkillFullInfo);
  //  rpc CVDeleteSkill (SkillFullInfo) returns (SkillFullInfo);

  //  rpc CVAppendPersonality (PersonalityFullInfo) returns (PersonalityFullInfo);
  //  rpc CVDeletePersonality (PersonalityFullInfo) returns (PersonalityFullInfo);

  //  rpc CVAppendEducation (EducationFullInfo) returns (EducationFullInfo);
  //  rpc CVDeleteEducation (EducationFullInfo) returns (EducationFullInfo);

  //  rpc CVAppendCertification (CertificationFullInfo) returns (CertificationFullInfo);
  //  rpc CVDeleteCertification (CertificationFullInfo) returns (CertificationFullInfo);
}